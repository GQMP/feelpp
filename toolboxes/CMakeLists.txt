###  CMakeLists.txt; coding: utf-8 --- 

#  Author(s): Christophe Prud'homme <christophe.prudhomme@feelpp.org>
#       Date: 05 Jan 2017
#
#  Copyright (C) 2017 Feel++ Consortium
#
# Distributed under the GPL(GNU Public License):
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#

cmake_minimum_required(VERSION 2.8)

project(toolboxes)
set(PROJECT_SHORTNAME "toolbox")

# with this it is possible to compile applications/models from an installed
# version of feel++. This is useful also for staged compilation for docker
if ( ${CMAKE_SOURCE_DIR} STREQUAL ${CMAKE_CURRENT_SOURCE_DIR} )
  find_package(Feel++ PATHS ${FEELPP_DIR}/share/feelpp/feel/cmake/modules $ENV{FEELPP_DIR}/share/feelpp/feel/cmake/modules /usr/share/feelpp/feel/cmake/modules /usr/local/share/feelpp/feel/cmake/modules )
  if(NOT FEELPP_FOUND)
      message(FATAL_ERROR "Feel++ was not found on your system. Make sure to install it and specify the FEELPP_DIR to reference the installation directory.")
  endif()
endif()


option(FEELPP_MODELS_ENABLE_MESHALE "Enable/Disable mesh ALE" ON)
if ( FEELPP_MODELS_ENABLE_MESHALE )
  set( FEELPP_MODELS_HAS_MESHALE 1)
endif()
set(FEELPP_MODELS_HAS_MESHALE_HARMONICEXTENSION 1)
#set(FEELPP_MODELS_HAS_MESHALE_WINSLOW 1)

option(FEELPP_MODELS_ENABLE_THERMODYNAMICS "Enable/Disable ThermoDynamics" ON)
option(FEELPP_MODELS_ENABLE_THERMOELECTRIC "Enable/Disable ThermoElectric" ON)
option(FEELPP_MODELS_ENABLE_FLUIDMECHANICS "Enable/Disable FluidMechanics" ON)
option(FEELPP_MODELS_ENABLE_SOLIDMECHANICS "Enable/Disable SolidMechanics" ON)
option(FEELPP_MODELS_ENABLE_FSI "Enable/Disable FSI" ON)
option(FEELPP_MODELS_ENABLE_ADVECTION "Enable/Disable Advection" ON)
option(FEELPP_MODELS_ENABLE_LEVELSET "Enable/Disable LevelSet" ON)
option(FEELPP_MODELS_ENABLE_MULTIFLUID "Enable/Disable MultiFluid" ON)
option(FEELPP_MODELS_ENABLE_HDG "Enable/Disable MultiFluid" ON)
#option(FEELPP_ENABLE_PCH_MODELS "Enable precompiled headers for models (pch)" OFF)

set(FEELPP_TOOLBOXES_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
set(FEELPP_TOOLBOXES_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})

include_directories(${FEELPP_TOOLBOXES_SOURCE_DIR})
include_directories(${FEELPP_TOOLBOXES_BINARY_DIR})

add_subdirectory( feel/feelmodels )

if ( FEELPP_MODELS_ENABLE_FLUIDMECHANICS )
  add_subdirectory( fluid )
endif()
if ( FEELPP_MODELS_ENABLE_SOLIDMECHANICS )
  add_subdirectory( solid )
endif()
if ( FEELPP_MODELS_ENABLE_FSI )
  add_subdirectory( fsi )
endif()
if ( FEELPP_MODELS_ENABLE_HDG )
  add_subdirectory( hdg )
endif()
if ( FEELPP_MODELS_ENABLE_ADVECTION )
  add_subdirectory( advection )
endif()
if( FEELPP_MODELS_ENABLE_LEVELSET )
  add_subdirectory( levelset )
endif()
if ( FEELPP_MODELS_ENABLE_MULTIFLUID )
  add_subdirectory( multifluid )
endif()
  # Heat Toolbox
if ( FEELPP_MODELS_ENABLE_THERMODYNAMICS )
  add_subdirectory( thermodyn )
endif()
if ( FEELPP_MODELS_ENABLE_THERMODYNAMICS AND FEELPP_MODELS_ENABLE_FLUIDMECHANICS )
  add_subdirectory( heatfluid )
endif()
if ( FEELPP_MODELS_ENABLE_THERMOELECTRIC )
  add_subdirectory( thermoelectric )
endif()
